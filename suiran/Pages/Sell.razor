@page "/sell"
@inject HttpClient Http

<PageTitle>会計 | 翠巒祭</PageTitle>

<h1>会計</h1>

@if (item_data == null)
{
    <p><em>読み込み中…</em></p>
}
else
{
    <div class="footer">
        <a class="under-button">削除</a>
        <a class="under-button">決定</a>
    </div>

    @foreach (var item in this.item_data)
    {
	     <div class="item" @key="item.ItemName">
				<div class="img"></div>

				<div class="text">
					<div>@item.ItemName</div>
					<div>
						<a class="button" @onclick="() => Declement(item)" oncontextmenu="return false;">-</a>
							@item.ItemNum 
						<a class="button" @onclick="() => Plus(item)" oncontextmenu="return false;">+</a>
					</div>
					<div>@item.ItemPrice 円</div>
					<div>@item.ItemPrices 円</div>
				</div>
        </div>
    }
}

<div style="height: 20vh;"></div>

@code {
    private ItemData[]? item_data;

    protected override async Task OnInitializedAsync()
    {
        item_data = await Http.GetFromJsonAsync<ItemData[]>("sample-data/item.json");
    }

    public class ItemData
    {
        public string? ItemName { get; set; }
        public int ItemPrice { get; set; }
        public int ItemNum = 0;
        public int ItemPrices => (int)(ItemPrice * ItemNum);
	}

	private void Declement(ItemData item)
	{
		if (item.ItemNum != 0)
			item.ItemNum--;
		StateHasChanged();// UIの再描画
	}

	private void Plus(ItemData item)
	{
		item.ItemNum++;
		StateHasChanged();// UIの再描画
	}
}
